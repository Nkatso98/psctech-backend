files:
  "/etc/nginx/conf.d/https.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # HTTPS configuration for PSCTECH Backend
      server {
          listen 443 ssl http2;
          server_name api.psctech.com *.psctech.com;
          
          # SSL Configuration
          ssl_certificate /etc/ssl/certs/psctech.crt;
          ssl_certificate_key /etc/ssl/private/psctech.key;
          ssl_protocols TLSv1.2 TLSv1.3;
          ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
          ssl_prefer_server_ciphers off;
          ssl_session_cache shared:SSL:10m;
          ssl_session_timeout 10m;
          
          # Security headers
          add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
          add_header X-Frame-Options DENY always;
          add_header X-Content-Type-Options nosniff always;
          add_header X-XSS-Protection "1; mode=block" always;
          add_header Referrer-Policy "strict-origin-when-cross-origin" always;
          
          # Proxy to .NET application
          location / {
              proxy_pass http://localhost:5000;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection keep-alive;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_cache_bypass $http_upgrade;
              proxy_read_timeout 86400;
          }
          
          # Health check endpoint
          location /health {
              proxy_pass http://localhost:5000/health;
              proxy_http_version 1.1;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
      
      # Redirect HTTP to HTTPS
      server {
          listen 80;
          server_name api.psctech.com *.psctech.com;
          return 301 https://$server_name$request_uri;
      }

container_commands:
  01_reload_nginx:
    command: "service nginx reload"
